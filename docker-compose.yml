services:
  backend:
    build:
      context: ./cra-ai-backend
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./cra-ai-backend:/app
    env_file:
      - ./cra-ai-backend/.env.dev
    expose:
      - "8000"
    depends_on:
      - db
      - mongo
      - redis

  frontend:
    build:
      context: ./cra-ai-frontend
      dockerfile: Dockerfile
    volumes:
      - ./cra-ai-frontend:/app
      - /app/node_modules
    env_file:
      - ./cra-ai-frontend/.env.dev
    expose:
      - "3000"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cra-ai-database/postgresql_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -P ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  pgbouncer:
    image: edoburu/pgbouncer
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      POOL_MODE: ${PGBOUNCER_POOL_MODE}
      MAX_CLIENT_CONN: ${PGBOUNCER_MAX_CLIENT_CONN}
      DEFAULT_POOL_SIZE: ${PGBOUNCER_DEFAULT_POOL_SIZE}
    ports:
      - "6432:6432"
    env_file:
      - ./.env
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5050:80"
    env_file:
      - ./.env

  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INIT_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INIT_ROOT_PASSWORD}
    env_file:
      - ./.env
    volumes:
      - mongo_data:/data/db
      - ./cra-ai-database/mongo_init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INIT_ROOT_USERNAME}", "--password", "${MONGO_INIT_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  mongo_data:
  redis_data: